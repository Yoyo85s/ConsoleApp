// <auto-generated />
using System;
using ConsoleApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace PersonsDb.Migrations
{
    [DbContext(typeof(AppSettings))]
    [Migration("20240205135231_1")]
    partial class _1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsoleApp.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AddressId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("City");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Country");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HouseNumber");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Neighborhood");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Street");

                    b.HasKey("AddressId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Addresses", (string)null);

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            City = "City1",
                            Country = "Country1",
                            HouseNumber = "123",
                            Neighborhood = "Neighborhood1",
                            PersonId = 1,
                            Street = "Street1"
                        },
                        new
                        {
                            AddressId = 2,
                            City = "City2",
                            Country = "Country2",
                            HouseNumber = "456",
                            Neighborhood = "Neighborhood2",
                            PersonId = 2,
                            Street = "Street2"
                        },
                        new
                        {
                            AddressId = 3,
                            City = "City3",
                            Country = "Country3",
                            HouseNumber = "789",
                            Neighborhood = "Neighborhood3",
                            PersonId = 3,
                            Street = "Street3"
                        });
                });

            modelBuilder.Entity("ConsoleApp.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ContactId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactId"));

                    b.Property<string>("Email1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email1");

                    b.Property<string>("Email2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email2");

                    b.Property<string>("MobileNumber1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MobileNumber1");

                    b.Property<string>("MobileNumber2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Phone1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Phone1");

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Contacts", (string)null);

                    b.HasData(
                        new
                        {
                            ContactId = 1,
                            Email1 = "john@example.com",
                            MobileNumber1 = "222-222-2222",
                            PersonId = 1,
                            Phone1 = "111-111-1111"
                        },
                        new
                        {
                            ContactId = 2,
                            Email1 = "jane@example.com",
                            MobileNumber1 = "444-444-4444",
                            PersonId = 2,
                            Phone1 = "333-333-3333"
                        },
                        new
                        {
                            ContactId = 3,
                            Email1 = "alex@example.com",
                            MobileNumber1 = "666-666-6666",
                            PersonId = 3,
                            Phone1 = "555-555-5555"
                        });
                });

            modelBuilder.Entity("ConsoleApp.Models.Employment", b =>
                {
                    b.Property<int>("EmploymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmploymentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmploymentId"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Department");

                    b.Property<DateTime>("EmploymentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EmploymentDate");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("JobTitle");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Salary");

                    b.HasKey("EmploymentId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Employments", (string)null);

                    b.HasData(
                        new
                        {
                            EmploymentId = 1,
                            Department = "IT",
                            EmploymentDate = new DateTime(2023, 2, 5, 14, 52, 31, 298, DateTimeKind.Local).AddTicks(2905),
                            JobTitle = "Developer",
                            PersonId = 1,
                            Salary = 60000m
                        },
                        new
                        {
                            EmploymentId = 2,
                            Department = "HR",
                            EmploymentDate = new DateTime(2022, 2, 5, 14, 52, 31, 298, DateTimeKind.Local).AddTicks(2970),
                            JobTitle = "Manager",
                            PersonId = 2,
                            Salary = 80000m
                        },
                        new
                        {
                            EmploymentId = 3,
                            Department = "Finance",
                            EmploymentDate = new DateTime(2022, 8, 5, 14, 52, 31, 298, DateTimeKind.Local).AddTicks(2972),
                            JobTitle = "Analyst",
                            PersonId = 3,
                            Salary = 70000m
                        });
                });

            modelBuilder.Entity("ConsoleApp.Models.FamilyStatus", b =>
                {
                    b.Property<int>("FamilyStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FamilyStatusId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FamilyStatusId"));

                    b.Property<bool>("HasChildren")
                        .HasColumnType("bit")
                        .HasColumnName("HasChildren");

                    b.Property<bool>("MaritalStatus")
                        .HasColumnType("bit")
                        .HasColumnName("MaritalStatus");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("FamilyStatusId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("FamilyStatuses", (string)null);

                    b.HasData(
                        new
                        {
                            FamilyStatusId = 1,
                            HasChildren = false,
                            MaritalStatus = false,
                            PersonId = 1
                        },
                        new
                        {
                            FamilyStatusId = 2,
                            HasChildren = true,
                            MaritalStatus = true,
                            PersonId = 2
                        },
                        new
                        {
                            FamilyStatusId = 3,
                            HasChildren = false,
                            MaritalStatus = false,
                            PersonId = 3
                        });
                });

            modelBuilder.Entity("ConsoleApp.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PersonId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<bool>("Gender")
                        .HasColumnType("bit")
                        .HasColumnName("Gender");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("PersonId");

                    b.ToTable("Persons", (string)null);

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            Gender = true,
                            Name = "Alexander Andersson"
                        },
                        new
                        {
                            PersonId = 2,
                            Gender = false,
                            Name = "Sofie Larsson"
                        },
                        new
                        {
                            PersonId = 3,
                            Gender = true,
                            Name = "Yasser Sahli"
                        });
                });

            modelBuilder.Entity("ConsoleApp.Models.Address", b =>
                {
                    b.HasOne("ConsoleApp.Models.Person", "Person")
                        .WithOne("Address")
                        .HasForeignKey("ConsoleApp.Models.Address", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ConsoleApp.Models.Contact", b =>
                {
                    b.HasOne("ConsoleApp.Models.Person", "Person")
                        .WithOne("Contact")
                        .HasForeignKey("ConsoleApp.Models.Contact", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ConsoleApp.Models.Employment", b =>
                {
                    b.HasOne("ConsoleApp.Models.Person", "Person")
                        .WithOne("Employment")
                        .HasForeignKey("ConsoleApp.Models.Employment", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ConsoleApp.Models.FamilyStatus", b =>
                {
                    b.HasOne("ConsoleApp.Models.Person", "Person")
                        .WithOne("FamilyStatus")
                        .HasForeignKey("ConsoleApp.Models.FamilyStatus", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ConsoleApp.Models.Person", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Contact")
                        .IsRequired();

                    b.Navigation("Employment")
                        .IsRequired();

                    b.Navigation("FamilyStatus")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
